---

## FIXME! kitchen OK, travis NOK
## Error! Your kernel headers for kernel 3.19.0-58-generic cannot be found
- name: Debian | upgrade all packages to the latest version
  apt: upgrade=dist
  async: 3600
  poll: 300
  register: distout
  when: (harden_upgradeall is defined and harden_upgradeall) and (travisci is not defined or not travisci)
#- debug: var=distout.stdout_lines
#  when: travisci is not defined or not travisci

- name: Debian | Remove rpc-related packages
  apt:
    name: "{{item}}"
    state: absent
    purge: yes
  with_items:
    - rpcbind
  when: harden_use_rpc is not defined or not harden_use_rpc

- name: Debian | Remove container lxc-related packages
  apt:
    name: "{{item}}"
    state: absent
    purge: yes
  with_items:
    - lxd
    - lxcfs
    - lxc-common
    - liblxc1
  when: harden_use_containers_lxc is not defined or not harden_use_containers_lxc

- include: unattended-upgrades.yml
  when: harden_security_update_auto

- debug: var=ansible_mounts
- name: add apt hardening with somme immutable directories
  template: "src=99security dest=/etc/apt/apt.conf.d owner=root mode=0644"

- include: debian-logcheck.yml
  when: harden_logcheck is defined and harden_logcheck

- name: Enable sysstat sar collection
  replace:
    dest='/etc/default/sysstat' regexp='^ENABLED="false"' replace='ENABLED="true"'
  notify:
    - restart sysstat

- stat: path=/etc/default/rng-tools
  register: rngconf
- name: Debian | More entropy
  lineinfile:
    dest='/etc/default/rng-tools' regexp='^HRNGDEVICE=/dev/urandom' insertafter='^#HRNGDEVICE=/dev/null' line='HRNGDEVICE=/dev/urandom'
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and rngconf.stat.exists

## https://bugs.launchpad.net/ubuntu/+source/debsecan/+bug/95925
- block:
    - name: Ubuntu | Disable automatic report of debsecan
      replace: dest=/etc/default/debsecan regexp='^REPORT=.*' replace='REPORT=false' backup=yes
#      replace: dest=/etc/default/debsecan regexp='^SUITE=.*' replace='SUITE=sid' backup=yes
    - name: Ubuntu | Disable debsecan cron
      replace:
        dest: /etc/cron.d/debsecan
        regexp: '^([0-9].*) * * * * daemon test -x /usr/bin/debsecan && /usr/bin/debsecan --cron'
        replace: '#\1 * * * * daemon test -x /usr/bin/debsecan && /usr/bin/debsecan --cron'
  when: ansible_distribution == 'Ubuntu'
- name: Debian | define distribution of debsecan
  replace: dest=/etc/default/debsecan regexp='^SUITE=.*' replace='SUITE={{ ansible_distribution_release }}' backup=yes
  when: ansible_distribution == 'Debian'

## http://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/
## https://bugzilla.redhat.com/show_bug.cgi?id=455713
## https://wiki.archlinux.org/index.php/Capabilities
## https://wiki.archlinux.org/index.php/DeveloperWiki:Security#Replacing_setuid_with_capabilities
## https://wiki.ubuntu.com/Security/Investigation/Setuid
## FIXME! same for chroot cap and others
## FIXME! not idempotent, https://github.com/ansible/ansible/issues/18911
## Not setpcap in unprivileged lxc container, https://lists.linuxcontainers.org/pipermail/lxc-users/2016-February/010998.html
- block:
    - debug: var=ansible_virtualization_type
    - name: Capabilities Hardening - default network tools
      capabilities: "path={{ item }} capability='cap_net_raw+pe' state=present"
      with_items:
        - /bin/ping
        - /bin/ping6
        - /usr/bin/traceroute6.iputils
        - /usr/bin/mtr
      ignore_errors: true
    - name: ensure permissions are not setuid - using capabilities
      file:
        path="{{ item }}"
        mode=0755
      with_items:
        - /bin/ping
        - /bin/ping6
        - /usr/bin/traceroute6.iputils
        - /usr/bin/mtr
      ignore_errors: true
    - name: Capabilities Hardening - tcpdump
      capabilities: "path=/usr/sbin/tcpdump capability='cap_net_raw,cap_net_admin=eip' state=present"
  when: not (ansible_virtualization_type is defined and (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker"))


- name: check if /etc/init.d/rc exists
  stat: path=/etc/init.d/rc
  register: rcfile
- block:
    - command: "lsattr {{ immutable_testfile }}"
      register: rclsattr
      changed_when: false
    - debug: var=rclsattr.stdout
    - name: remove temporarily immutable flag on file
      command: "chattr -i /etc/init.d"
      when: rclsattr.stdout.find("----i-") == -1 and not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
    - name: set umask in /etc/init.d/rc
      lineinfile: "dest=/etc/init.d/rc regexp='^umask ' line='umask {{ harden_umask }}'"
      when: ansible_distribution == "Ubuntu"
    - name: re-set immutable flag on file
      command: "chattr +i /etc/init.d"
      when: rclsattr.stdout.find("----i-") == -1 and not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")
      ignore_errors: true
  when: rcfile.stat.exists

- include: apparmor-audit.yml
  when: harden_apparmor_audit

