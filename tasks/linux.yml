---

- name: set better login.defs
  lineinfile: "dest=/etc/login.defs regexp={{ item.r }} line={{ item.l }}"
  with_items:
    - { r: '^PASS_MAX_DAYS', l: "PASS_MAX_DAYS   {{ harden_logindefs_pass_maxdays }}" }
    - { r: '^PASS_WARN_AGE', l: "PASS_WARN_AGE    {{ harden_logindefs_pass_warnage }}" }
    - { r: '^LOGIN_RETRIES', l: "LOGIN_RETRIES    {{ harden_logindefs_login_retries }}" }
    - { r: '^LOGIN_TIMEOUT', l: "LOGIN_TIMEOUT    {{ harden_logindefs_login_timeout }}" }
    - { r: '^ENV_SUPATH', l: "ENV_SUPATH      {{ harden_logindefs_env_supath }}" }
    - { r: '^ENV_PATH', l: "ENV_PATH        {{ harden_logindefs_env_path }}" }
    - { r: '^UMASK', l: "UMASK     {{ harden_umask }}" }
  when: ansible_os_family != "Alpine"

- name: Set Account Expiration Following Inactivity
  lineinfile:
    dest: /etc/default/useradd
    regexp: '^INACTIVE=.*'
    line: 'INACTIVE=90'
  when: ansible_os_family != "Alpine"

## https://unixserveradmin.wordpress.com/2012/12/08/how-to-stop-usb-mass-storage-device-in-rhelcentos/
- block:
    - name: disable usb storage drivers - modprobe
      lineinfile: dest=/etc/modprobe.d/no-usb.conf line='install usb-storage /bin/true' create=yes
    - stat: path=/etc/default/grub
      register: defgrub
    - name: disable usb storage drivers - grub
      replace: dest=/etc/default/grub regexp='GRUB_CMDLINE_LINUX="(.*)nousb(.*)"' replace='\1nousb\2' backup=yes
    ## http://security.stackexchange.com/questions/49097/protecting-against-firewire-dma-vulnerabilities-in-linux
      when: ansible_os_family != "Alpine" and (defgrub is defined and defgrub.stat.exists)
  when: harden_disable_usb is defined and harden_disable_usb
- block:
    - name: ensure usb storage drivers not disabled at modprobe level
      file: dest=/etc/modprobe.d/no-usb.conf state=absent
    - stat: path=/etc/default/grub
      register: defgrub
    - name: disable usb storage drivers - grub
      replace: dest=/etc/default/grub regexp='GRUB_CMDLINE_LINUX="(.*)nousb(.*)"' replace='\1\2' backup=yes
    ## http://security.stackexchange.com/questions/49097/protecting-against-firewire-dma-vulnerabilities-in-linux
      when: ansible_os_family != "Alpine" and (defgrub is defined and defgrub.stat.exists)
  when: not (harden_disable_usb is defined and harden_disable_usb)

- name: disable firewire DMA drivers - modprobe
  lineinfile:
    dest: /etc/modprobe.d/no-firewire.conf
    line: "{{ item }}"
    create: yes
  with_items:
    - 'blacklist ohci1394'
    - 'blacklist sbp2'
    - 'blacklist dv1394'
    - 'blacklist raw1394'
    - 'blacklist video1394'
    - 'blacklist firewire-ohci'
    - 'blacklist firewire-sbp2'
  notify:
    - update-initramfs

- block:
    - stat: path=/etc/default/apport
      register: defapport
      when: ansible_distribution == 'Ubuntu'
    - name: Ubuntu | ensure Apport crash report is disabled
      replace: dest=/etc/default/apport regexp='^enabled=.*$' replace='enabled=0'
      when: ansible_distribution == 'Ubuntu' and defapport.stat.exists
    - name: set sensible core pattern
      sysctl: name="kernel.core_pattern" value="/tmp/cores/core.%e.%p.%h.%t" sysctl_set=yes state=present reload=yes
      when: not (ansible_os_family == 'RedHat' and (ansible_virtualization_type is defined and ansible_virtualization_type == "lxc"))
  when: ansible_system == 'Linux' and harden_linux_disable_bugreport is defined and harden_linux_disable_bugreport and not (ansible_virtualization_type is defined and ansible_virtualization_type == "docker")

#journalctl --disk-usage
#journalctl --verify
#journalctl --vacuum-size=800M
- block:
    - name: configure linux journal
      ini_file: dest=/etc/systemd/journald.conf section={{ item.s }} option={{ item.o }} value={{ item.v }} backup=yes
      with_items:
        - { s: 'Journal', o: 'SystemMaxUse', v: "{{ harden_journald_systemmaxuse }}" }
#        - { s: 'Journal', o: 'ForwardToSyslog', v: 'yes' }
      notify:
        - restart journald
  when: ansible_service_mgr == "systemd"

## FIXME! firewall rules

- include: iptables.yml
  when: ansible_os_family == 'Debian' or ansible_os_family == "RedHat"

- include: usb.yml
  when: harden_usb_restrict_udev

- include: aide-hids.yml
  when: harden_aide and (ansible_os_family == 'Debian' or ansible_os_family == "RedHat")

#- include: osquery.yml
#  when: ansible_os_family == 'Debian' or ansible_os_family == "RedHat" and harden_osquery

- include: ubuntu-livepatch.yml
  when: ansible_distribution == 'Ubuntu' and harden_ubuntu_livepatch is defined and harden_ubuntu_livepatch

- include: redhat-kpatch.yml
  when: ansible_distribution == 'RedHat Enterprise Linux' and ansible_distribution_version == '7.2' and harden_rhel_kpatch is defined and harden_rhel_kpatch

## not supported by raspbian, https://github.com/raspberrypi/linux/issues/1352
#- include: auditd.yml
#  when: ansible_system == 'Linux' and not (ansible_distribution == "Debian" and ansible_architecture == "armv6l")

- include: grub.yml
- include: monit.yml
- include: logrotate.yml
- include: passwd.yml

- block:
    - name: Alpine | Ensure /etc/rsyslog.d exists
      file:
        dest: /etc/rsyslog.d
        state: directory
        owner: root
        mode: '0755'
    - name: Alpine | Ensure rsyslog use rsyslog.d directory
      lineinfile:
        dest: /etc/rsyslog.conf
        regexp: '^\$IncludeConfig /etc/.*'
        line: '$IncludeConfig /etc/rsyslog.d/*.conf'
        backup: yes
  when: ansible_distribution == "Alpine"

- name: add rsyslog configurations
  template:
    src: "{{ item }}.j2"
    dest: "/etc/rsyslog.d/{{ item | regex_replace('^rsyslog-', '') }}"
    mode: '0644'
    backup: yes
  with_items: "{{ harden_rsyslog_extraconf }}"
  notify:
    - restart rsyslog

- name: Disable unused filesystems modules
  template:
    src: "{{ harden_modprobe_template }}"
    dest: /etc/modprobe.d/dev-sec.conf
    mode: '0644'
    backup: yes
  when: harden_modprobe_template is defined and harden_modprobe_template != ''
