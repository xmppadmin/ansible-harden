---
## or separate role like https://github.com/dev-sec/ansible-ssh-hardening

- stat: path=/etc/ssh/ssh_host_ed25519_key
  register: sshkey
- name: Generate any missing SSH host key
  command: ssh-keygen -A
  when: not sshkey.stat.exists and ((ansible_os_family == "RedHat" and ansible_distribution_major_version == '7') or ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == "Alpine")

- name: ensure privsep directory for sshd at reboot (systemd-tmpfiles)
  lineinfile: dest=/etc/tmpfiles.d/sshd.conf line='    d    /run/sshd   0755 root root - -' create=yes
  when: ansible_service_mgr == 'systemd' and (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18)

- name: ensure privsep directory for sshd
  file:
    dest: /run/sshd
    state: directory
  when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18)

- name: Configure sshd_config
  template:
    src: "{{ harden_sshd_template }}"
    dest: /etc/ssh/sshd_config
    mode: '0600'
    owner: 0
    group: 0
    backup: yes
    validate: 'sshd -f %s -T'
  notify:
    - restart sshd
  when: not (ansible_distribution == "Alpine")

- name: Alpine | Configure sshd_config
  template:
    src: "{{ harden_sshd_template }}"
    dest: /etc/ssh/sshd_config
    mode: '0600'
    owner: 0
    group: 0
    backup: yes
    validate: 'sshd -f %s -T -C user=nobody'
  notify:
    - restart sshd
  when: (ansible_distribution == "Alpine")

- name: Check /etc/ssh/moduli for weak values
  shell: "awk '$5 < 2047 && $5 ~ /^[0-9]+$/ { print $5 }' /etc/ssh/moduli | uniq | wc -c"
  changed_when: false
  register: moduli

- name: Clean /etc/ssh/moduli
  # just remove weak ones
  shell: "awk '$5 >= 2000' /etc/ssh/moduli > /etc/ssh/moduli.strong && mv /etc/ssh/moduli.strong /etc/ssh/moduli"
  # re-generate. much longer
  #shell: "ssh-keygen -G /etc/ssh/moduli.all -b 4096 && ssh-keygen -T /etc/ssh/moduli.safe -f /etc/ssh/moduli.all && mv /etc/ssh/moduli.safe /etc/ssh/moduli"
  when: moduli.stdout != 0

- name: Ensure sshd groups exist
  group:
    name: "{{ item }}"
    state: present
    system: yes
  with_items:
    - sftp-users
    - forwarding-users
  when: ansible_distribution != "Alpine"

- name: Alpine | Ensure sshd groups exist
  command: "addgroup {{ item }}"
  with_items:
    - sftp-users
    - forwarding-users
  ignore_errors: true
  when: ansible_distribution == "Alpine"
